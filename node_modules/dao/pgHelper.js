/**
*利用连接池连接数据库封装代码
*
*/

//引用pg模块
var pg = require('pg');

var conString = "postgres://postgres:123456@39.100.31.4:5432/lightweightGIS";
var client = new pg.Client(conString);
 
var PG = function(){
    console.log("准备向****数据库连接...");
};
 
PG.prototype.getConnection = function(){
    client.connect(function (err) {
        if (err) {
            return console.error('could not connect to postgres', err);
        }
        client.query('SELECT NOW() AS "theTime"', function (err, result) {
            if (err) {
                return console.error('error running query', err);
            }
            console.log("postgres数据库连接成功...");
        });
    });
};

 
// 查询函数
//@param str 查询语句
//@param value 相关值
//@param cb 回调函数
var clientHelper = function(str,value,cb){
    client.query(str,value,function(err,result){
        //console.log("str..:"+str);
        //console.log("value..:"+value);
        if(err) {
            cb("err");
        }
        else{
            if(result.rows != undefined)
                cb(result.rows);
            else
                cb();
            console.log("result.rows...:"+result.rows[0]);
        }
    });
}

//增
//@param tablename 数据表名称
//@param fields 更新的字段和值，json格式
//@param cb 回调函数
PG.prototype.save = function(tablename,fields,cb){
    if(!tablename) return;
    var str = "insert into "+tablename+"(";
    var field = [];
    var value = [];
    var num = [];
    var count = 0;
    for(var i in fields){
        count++;
        field.push(i);
        value.push(fields[i]);
        num.push("$"+count);
    }
    str += field.join(",") +") values("+num.join(",")+")";
    clientHelper(str,value,cb);
};
 
//删除
//@param tablename 数据表名称
//@param fields 条件字段和值，json格式
//@param cb 回调函数
PG.prototype.remove = function(tablename,fields,cb){
    if(!tablename) return;
    var str = "delete from "+tablename+" where ";
    var field = [];
    var value = [];
    var count = 0;
    for(var i in fields){
        count++;
        field.push(i+"=$"+count);
        value.push(fields[i]);
    }
    str += field.join(" and ");
    
    clientHelper(str,value,cb);
}
 
//修改
//@param tablename 数据表名称
//@param fields 更新的字段和值，json格式
//@param mainfields 条件字段和值，json格式
PG.prototype.update = function(tablename,mainfields,fields,cb){
    if(!tablename) return;
    var str = "update "+tablename+" set ";
    var field = [];
    var value = [];
    var count = 0;
    
    for(var i in fields){
        count++;
        field.push(i+"=$"+count);
        value.push(fields[i]);
        //console.log("fields[i]...:"+fields[i]);
    }
    str += field.join(",") +" where ";
    console.log("updatestr...:"+str);
    field = [];
    for(var j in mainfields){
        count++;
        field.push(j+"=$"+count);
        value.push(mainfields[j]);
        //console.log("mainfields...:"+mainfields[j]);
    }
    str += field.join(" and ");
    clientHelper(str,value,cb);
}
 
//查询
//@param tablename 数据表名称
//@param fields 条件字段和值，json格式
//@param returnfields 返回字段
//@param cb 回调函数
PG.prototype.select = function(tablename,fields,returnfields,cb){
    if(!tablename) return;
    var returnStr = "";
    //如果返回字段为空
    if(returnfields.length == 0)
    	//则代表返回所有字段，用*表示
        returnStr = '*';
    else
    	//否则指定返回字段
        returnStr= returnfields.join(",");
    
    var str = '';
    //如果条件字段为空
    if(fields.length == 0) 
    	//则查询该表所有数据
    	str = "select "+returnStr+ " from "+tablename;
    else
    	//否则根据条件字段进行查询
    	str = "select "+returnStr+ " from "+tablename+" where ";
    var field = [];
    var value = [];
    var count = 0;
    for(var i in fields){
        count++;
        field.push(i+"=$"+count);
        value.push(fields[i]);
    }
    str += field.join(" and ");
    console.log("strsql...:"+str);
    clientHelper(str,value,cb);
};

PG.prototype.selectpolygon_gdpByCode =function(tablename,fields,returnfields,cb){
    if(!tablename) return;
    var returnStr = "";
    //如果返回字段为空
    if(returnfields.length == 0)
    	//则代表返回所有字段，用*表示
        returnStr = '*';
    else
    	//否则指定返回字段
        returnStr= returnfields.join(",");
    
    var str = '';
    //如果条件字段为空
    if(fields.length == 0) 
    	//则查询该表所有数据
    	str = "select "+returnStr+ " from "+tablename;
    else
    	//否则根据条件字段进行查询
        //str = "select "+returnStr+ " from "+tablename+" where ";
        str = "select "+returnStr+ " from "+tablename+" where polygon_code = '"+ fields+"' order by datayear";
    //console.log("strsql...:"+str);
    //console.log("value...:"+value);
    clientHelper(str,'',cb);
}

module.exports = new PG();